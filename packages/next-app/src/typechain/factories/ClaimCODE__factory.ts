/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ClaimCODE, ClaimCODEInterface } from "../ClaimCODE";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_claimPeriodEnds",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_codeToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Address0Error",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "ClaimEnded",
    type: "error",
  },
  {
    inputs: [],
    name: "ClaimNotEnabled",
    type: "error",
  },
  {
    inputs: [],
    name: "InitError",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "MintGovernanceDisable",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_claimant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "MerkleRootChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "MintedByGovernance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "MintingDisabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "claimPeriodEnds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "codeToken",
    outputs: [
      {
        internalType: "contract IERC20Mintable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "disableMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disableMintingByGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintByGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintGovernance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintingEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040526004805461ffff191661010117905534801561001f57600080fd5b50604051610e54380380610e5483398101604081905261003e916100d5565b61004733610085565b6001600160a01b03811661006e576040516324560b2960e11b815260040160405180910390fd5b6003919091556001600160a01b0316608052610112565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100e857600080fd5b825160208401519092506001600160a01b038116811461010757600080fd5b809150509250929050565b608051610d1961013b600039600081816101630152818161064501526108bb0152610d196000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80639a114cb21161008c578063b1620a5911610066578063b1620a59146101e6578063c3707e0d146101f8578063df1ba3a914610200578063f2fde38b1461021357600080fd5b80639a114cb2146101855780639e34070f146101985780639fd6db12146101d957600080fd5b80637cb64759116100c85780637cb647591461011e5780637e5cd5c1146101315780638da5cb5b14610139578063904d20221461015e57600080fd5b80632eb4a7ab146100ef57806366deac471461010b578063715018a614610114575b600080fd5b6100f860025481565b6040519081526020015b60405180910390f35b6100f860035481565b61011c610226565b005b61011c61012c366004610b33565b610291565b61011c610360565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610102565b6101467f000000000000000000000000000000000000000000000000000000000000000081565b61011c610193366004610b4c565b61040d565b6101c96101a6366004610b33565b600881901c60009081526001602081905260409091205460ff9092161b16151590565b6040519015158152602001610102565b6004546101c99060ff1681565b6004546101c990610100900460ff1681565b61011c6106b1565b61011c61020e366004610be7565b61075e565b61011c610221366004610c11565b61091b565b6000546001600160a01b031633146102855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61028f60006109fd565b565b6000546001600160a01b031633146102eb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161027c565b60025415610325576040517fb071c0a400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028190556040518181527f1b930366dfeaa7eb3b325021e4ae81e36527063452ee55b86c95f85b36f4c31c9060200160405180910390a150565b6000546001600160a01b031633146103ba5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161027c565b600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690556040517faf79b4370f6af9d950564bbe6b81f7f0834c003c455db9248f4e55e6bf865eb790600090a1565b6040517fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003360601b166020820152603481018490526000906054016040516020818303038152906040528051906020012090506000806104a4858580806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506002549150869050610a65565b600454919350915060ff166104e5576040517faf95b1d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8161051c576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61054381600881901c60009081526001602081905260409091205460ff9092161b16151590565b1561057a576040517f646cf55800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003544211156105b6576040517f4f184b7e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600881901c6000908152600160208190526040909120805460ff84169290921b909117905560405186815233907f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d49060200160405180910390a26040517f40c10f19000000000000000000000000000000000000000000000000000000008152336004820152602481018790527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b15801561069157600080fd5b505af11580156106a5573d6000803e3d6000fd5b50505050505050505050565b6000546001600160a01b0316331461070b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161027c565b600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690556040517faf79b4370f6af9d950564bbe6b81f7f0834c003c455db9248f4e55e6bf865eb790600090a1565b6000546001600160a01b031633146107b85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161027c565b600454610100900460ff166107f9576040517facdd27f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038216610839576040517f48ac165200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816001600160a01b03167f406e5c8b836b7dba9c834d3558f667b4984c2de8cef6409c3c4b5baf7f775e3d8260405161087491815260200190565b60405180910390a26040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b038381166004830152602482018390527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b1580156108ff57600080fd5b505af1158015610913573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146109755760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161027c565b6001600160a01b0381166109f15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161027c565b6109fa816109fd565b50565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000808281805b8751811015610b2757610a80600283610c62565b91506000888281518110610a9657610a96610c81565b60200260200101519050808411610ad8576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350610b14565b6040805160208101839052908101859052606001604051602081830303815290604052805190602001209350600183610b119190610cb0565b92505b5080610b1f81610cc8565b915050610a6c565b50941495939450505050565b600060208284031215610b4557600080fd5b5035919050565b600080600060408486031215610b6157600080fd5b83359250602084013567ffffffffffffffff80821115610b8057600080fd5b818601915086601f830112610b9457600080fd5b813581811115610ba357600080fd5b8760208260051b8501011115610bb857600080fd5b6020830194508093505050509250925092565b80356001600160a01b0381168114610be257600080fd5b919050565b60008060408385031215610bfa57600080fd5b610c0383610bcb565b946020939093013593505050565b600060208284031215610c2357600080fd5b610c2c82610bcb565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000816000190483118215151615610c7c57610c7c610c33565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008219821115610cc357610cc3610c33565b500190565b6000600019821415610cdc57610cdc610c33565b506001019056fea26469706673582212200b14cb47e9587eb90f5ae9b91ec88809921a78c10996bf20fa70cba2a70b0ffa64736f6c63430008090033";

export class ClaimCODE__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _claimPeriodEnds: BigNumberish,
    _codeToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ClaimCODE> {
    return super.deploy(
      _claimPeriodEnds,
      _codeToken,
      overrides || {}
    ) as Promise<ClaimCODE>;
  }
  getDeployTransaction(
    _claimPeriodEnds: BigNumberish,
    _codeToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _claimPeriodEnds,
      _codeToken,
      overrides || {}
    );
  }
  attach(address: string): ClaimCODE {
    return super.attach(address) as ClaimCODE;
  }
  connect(signer: Signer): ClaimCODE__factory {
    return super.connect(signer) as ClaimCODE__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClaimCODEInterface {
    return new utils.Interface(_abi) as ClaimCODEInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClaimCODE {
    return new Contract(address, _abi, signerOrProvider) as ClaimCODE;
  }
}
